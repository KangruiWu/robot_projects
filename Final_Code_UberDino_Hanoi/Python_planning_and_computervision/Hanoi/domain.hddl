(define (domain hanoi_htn)
(:requirements :negative-preconditions 
	:hierarchy
	:typing
	:equality
	:method-preconditions
)

(:types 
	bloc - object
	platform - object
)

(:predicates 
    (clear ?o - object)
    (smaller ?o0 - object ?o1 - object)
	(on ?b - bloc ?o - object)
    (loaded ?b - bloc)
    (unloaded)
)

(:constants 
  platform1 platform2 platform3 - platform
)

(:task MoveBloc :parameters (?b - bloc ?from - object ?to - object))
(:task SolveHanoi :parameters ())

(:method Solve
	:parameters (?b - bloc ?from - object ?to - object)
	:task (SolveHanoi)
	:precondition (and (smaller ?b ?to) )
	:ordered-subtasks (and 
		(MoveBloc ?b ?from ?to )
		(SolveHanoi)
	)
)

(:method Stop
	:parameters ()
	:task (SolveHanoi)
	:precondition (and (clear platform1) (clear platform2) (unloaded)
	)
	:ordered-subtasks ()
)

(:method Move
	:parameters (?b - bloc ?from - object ?to - object)
	:task (MoveBloc ?b ?from ?to)
	:precondition (and (clear ?b) (clear ?to) (unloaded) (on ?b ?from) (smaller ?b ?to)
	)
	:ordered-subtasks (and 
		(load ?b ?from )
		(unload ?b ?to )
	)
)

(:action load
    :parameters (?b - bloc ?from - object)
    :precondition (and (clear ?b) (unloaded) (on ?b ?from) )
    :effect (and (loaded  ?b) (clear ?from) (not(on ?b ?from)) (not(unloaded)) )
)

(:action unload
    :parameters (?b - bloc ?to - object)
    :precondition (and (smaller ?b ?to) (loaded  ?b) (clear ?to) )
    :effect (and (unloaded) (on ?b ?to) (not(clear ?to)) (not (loaded  ?b)) )
) 
)